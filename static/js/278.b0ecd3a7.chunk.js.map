{"version":3,"file":"static/js/278.b0ecd3a7.chunk.js","mappings":"wNAqEA,UAlEe,WAAO,IAAD,EACnB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAO,UAAGL,EAAaM,IAAI,kBAApB,QAAkC,GACzCC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,gCACVC,EAAU,mCAPG,SAcJC,IAdI,uEAcnB,8FACQC,MAAM,GAAD,OAAIH,EAAJ,iCAAoCC,EAApC,kBAAqDL,IAC7DQ,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACb,IACAL,MAAK,SAAAM,GACJf,EAAce,EAAKC,QACpB,IAVL,4CAdmB,uBASnBC,EAAAA,EAAAA,YAAU,WACRV,GAED,GAAE,IA4BH,OACE,6BACE,kBAAMW,SAfV,SAAsBC,GACpBA,EAAEC,iBACFvB,EAAgB,CAAEI,QAASkB,EAAEE,OAAOC,OAAOC,QAC3ChB,GACD,EAWG,WACE,kBACEiB,KAAK,OACLD,MAAOtB,EACPwB,KAAK,SACLC,SAfkB,SAAAP,GACD,KAAnBA,EAAEE,OAAOE,MACX1B,EAAgB,CAAC,GAEjBA,EAAgB,CAAEI,QAASkB,EAAEE,OAAOE,OAEvC,KAWK,mBAAQC,KAAK,SAAb,wBAEF,wBACGzB,EAAW4B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACrB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM7B,GAAlC,SACG0B,KAFID,EAMZ,QAIR,C,sBCnED,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBjB,EAAQkB,EAAKlB,KAInB,CAHE,MAAOmB,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQZ,GAERqB,QAAQT,QAAQZ,GAAOd,KAAK4B,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMd,GACbU,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQf,EAClE,CAEA,SAASe,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filmSearch, setFilmSearch] = useState([]);\n  const movieId = searchParams.get('movieId') ?? '';\n  const location = useLocation();\n\n  const API_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '158819e65eb0fbf8513ba7b934c25216';\n\n  useEffect(() => {\n    fetchFilms();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function fetchFilms() {\n    await fetch(`${API_URL}/search/movie?api_key=${API_KEY}&query=${movieId}`)\n      .then(resp => {\n        if (!resp.ok) {\n          throw new Error(resp.status);\n        }\n        return resp.json();\n      })\n      .then(data => {\n        setFilmSearch(data.results);\n      });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchParams({ movieId: e.target.search.value });\n    fetchFilms();\n  }\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ movieId: e.target.value });\n    }\n  };\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={movieId}\n          name=\"search\"\n          onChange={updateQueryString}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {filmSearch.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useSearchParams","searchParams","setSearchParams","useState","filmSearch","setFilmSearch","movieId","get","location","useLocation","API_URL","API_KEY","fetchFilms","fetch","then","resp","ok","Error","status","json","data","results","useEffect","onSubmit","e","preventDefault","target","search","value","type","name","onChange","map","id","title","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}