{"version":3,"file":"static/js/257.0fa16989.chunk.js","mappings":"6QAEaA,EAAYC,EAAAA,GAAAA,QAAH,4JAQTC,EAAOD,EAAAA,GAAAA,GAAH,iGAOJE,EAAiBF,EAAAA,GAAAA,IAAH,4H,kBCVZ,SAASG,EAAT,GAAkC,IAAD,IAATC,EAAS,EAATA,MACrC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAC5CC,EAA0DV,EAA1DU,YAAaC,EAA6CX,EAA7CW,MAAOC,EAAsCZ,EAAtCY,WAAYC,EAA0Bb,EAA1Ba,SAAxC,EAAkEb,EAAhBc,OAAAA,OAAlD,MAA2D,GAA3D,EAEMC,EAAU,gCACVC,EAAU,mCAqBhB,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8FACQC,MAAM,GAAD,OAAIH,EAAJ,kBAAqBb,EAArB,oBAAwCc,IAChDG,MAAK,SAAAC,GACJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,QAEvB,OAAOH,EAAKI,MACb,IACAL,MAAK,SAAAM,GACJxB,EAAewB,GACf3B,EAAMI,EACP,IAXL,4CADc,uBAAC,WAAD,wBAcdwB,EAED,GAAE,CAACxB,KAGF,iCACE,SAAC,KAAD,CAAMyB,GAAIrB,EAAasB,QAAvB,mBACA,UAACnC,EAAD,YACE,gBACEoC,IAAKnB,EAzBU,mCAyBqBA,EAAcoB,EAClDC,IAAKpB,EACLqB,MAAM,WAER,4BACE,wBAAKrB,KACL,wCAAgBC,MAChB,sCACA,uBAAIC,KACJ,qCACA,SAAClB,EAAD,UACGmB,EAAOmB,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACnB,OAAO,wBAAcD,GAALC,EACjB,aAKP,UAACvC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM+B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,0uGC3ED,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAO5B,KAAKuB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  gap: 30px;\n  padding: 10px;\n  border-bottom: 2px solid silver;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 10px;\n  padding-left: 0;\n`;\n\nexport const ContainerAbout = styled.div`\n  padding: 10px;\n  border-bottom: 2px solid silver;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);\n`;\n","/* eslint-disable jsx-a11y/alt-text */\nimport PropTypes from 'prop-types';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Container, ContainerAbout, List } from './MovieDetails.styled';\nimport defaultImg from '../../default-img.png';\n\nexport default function MovieDetails({ setId }) {\n  const [filmDetails, setFilmDetails] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n  const { poster_path, title, popularity, overview, genres = [] } = filmDetails;\n\n  const API_URL = 'https://api.themoviedb.org/3/';\n  const API_KEY = '158819e65eb0fbf8513ba7b934c25216';\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    async function fetchFilm() {\n      await fetch(`${API_URL}/movie/${movieId}?api_key=${API_KEY}`)\n        .then(resp => {\n          if (!resp.ok) {\n            throw new Error(resp.status);\n          }\n          return resp.json();\n        })\n        .then(data => {\n          setFilmDetails(data);\n          setId(movieId);\n        });\n    }\n    fetchFilm();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref.current}>Beak</Link>\n      <Container>\n        <img\n          src={poster_path ? IMAGE_BASE_URL + poster_path : defaultImg}\n          alt={title}\n          width=\"250px\"\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>Popularity: {popularity}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres:</h3>\n          <List>\n            {genres.map(({ name, id }) => {\n              return <li key={id}>{name}</li>;\n            })}\n          </List>\n        </div>\n      </Container>\n\n      <ContainerAbout>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </ContainerAbout>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  setId: PropTypes.func,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Container","styled","List","ContainerAbout","MovieDetails","setId","useState","filmDetails","setFilmDetails","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","poster_path","title","popularity","overview","genres","API_URL","API_KEY","useEffect","fetch","then","resp","ok","Error","status","json","data","fetchFilm","to","current","src","defaultImg","alt","width","map","name","id","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}